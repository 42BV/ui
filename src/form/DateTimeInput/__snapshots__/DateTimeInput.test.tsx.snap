// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: DateTimeInput ui InputGroup: Component: DateTimeInput => ui => InputGroup 1`] = `
<div
  className="input-group"
>
  <t
    id={10}
    render={[Function]}
  />
  <AddonButton
    onClick={[Function]}
  >
    <Icon
      icon="calendar_today"
    />
  </AddonButton>
</div>
`;

exports[`Component: DateTimeInput ui MaskedInput: Component: DateTimeInput => ui => MaskedInput 1`] = `
<Input
  id={10}
  innerRef={[Function]}
  onBlur={[Function]}
  onChange={[Function]}
  type="text"
/>
`;

exports[`Component: DateTimeInput ui with date picker in modal: Component: DateTimeInput => ui => with date picker in modal => not open 1`] = `
<FormGroup
  className="date-time-input with-modal"
  color="success"
  tag="div"
>
  <Label
    for="dateOfBirth"
    tag="label"
    widths={
      Array [
        "xs",
        "sm",
        "md",
        "lg",
        "xl",
      ]
    }
  >
    Date of birth
     
    <span
      className="date-time-input-format text-muted"
    >
      (
      YYYY-MM-DD HH:mm:ss
      )
    </span>
  </Label>
  <n
    className=""
    closeOnClickOutside={true}
    closeOnSelect={true}
    closeOnTab={true}
    dateFormat="YYYY-MM-DD"
    input={true}
    inputProps={
      Object {
        "autoComplete": "off",
        "id": "dateOfBirth",
        "invalid": false,
        "mask": Array [
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          " ",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
        ],
        "placeholder": "Please enter your date of birth",
      }
    }
    isValidDate={[Function]}
    onBeforeNavigate={[Function]}
    onCalendarClose={[Function]}
    onCalendarOpen={[Function]}
    onChange={[Function]}
    onClose={[Function]}
    onNavigate={[Function]}
    onNavigateBack={[Function]}
    onNavigateForward={[Function]}
    onOpen={[MockFunction]}
    open={false}
    renderInput={[Function]}
    strictParsing={true}
    timeConstraints={Object {}}
    timeFormat="HH:mm:ss"
    utc={true}
    value=""
  />
  Some error
</FormGroup>
`;

exports[`Component: DateTimeInput ui with date picker in modal: Component: DateTimeInput => ui => with date picker in modal => open 1`] = `
<FormGroup
  className="date-time-input with-modal"
  color="success"
  tag="div"
>
  <Label
    for="dateOfBirth"
    tag="label"
    widths={
      Array [
        "xs",
        "sm",
        "md",
        "lg",
        "xl",
      ]
    }
  >
    Date of birth
     
    <span
      className="date-time-input-format text-muted"
    >
      (
      YYYY-MM-DD HH:mm:ss
      )
    </span>
  </Label>
  <n
    className=""
    closeOnClickOutside={true}
    closeOnSelect={true}
    closeOnTab={true}
    dateFormat="YYYY-MM-DD"
    input={true}
    inputProps={
      Object {
        "autoComplete": "off",
        "id": "dateOfBirth",
        "invalid": false,
        "mask": Array [
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          " ",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
        ],
        "placeholder": "Please enter your date of birth",
      }
    }
    isValidDate={[Function]}
    onBeforeNavigate={[Function]}
    onCalendarClose={[Function]}
    onCalendarOpen={[Function]}
    onChange={[Function]}
    onClose={[Function]}
    onNavigate={[Function]}
    onNavigateBack={[Function]}
    onNavigateForward={[Function]}
    onOpen={[MockFunction]}
    open={false}
    renderInput={[Function]}
    strictParsing={true}
    timeConstraints={Object {}}
    timeFormat="HH:mm:ss"
    utc={true}
    value=""
  />
  Some error
  <DateTimeModal
    dateFormat="YYYY-MM-DD"
    isDateAllowed={[Function]}
    isOpen={true}
    label="Please enter your date of birth"
    onClose={[Function]}
    onSave={[Function]}
    timeFormat="HH:mm:ss"
    utc={true}
  />
</FormGroup>
`;

exports[`Component: DateTimeInput ui with format error: Component: DateTimeInput => ui => with format error 1`] = `
<FormGroup
  className="date-time-input"
  color="success"
  tag="div"
>
  <Label
    for="dateOfBirth"
    tag="label"
    widths={
      Array [
        "xs",
        "sm",
        "md",
        "lg",
        "xl",
      ]
    }
  >
    Date of birth
     
    <span
      className="date-time-input-format text-danger"
    >
      (
      YYYY-MM-DD HH:mm:ss
      )
    </span>
  </Label>
  <n
    className=""
    closeOnClickOutside={true}
    closeOnSelect={true}
    closeOnTab={true}
    dateFormat="YYYY-MM-DD"
    input={true}
    inputProps={
      Object {
        "autoComplete": "off",
        "id": "dateOfBirth",
        "invalid": true,
        "mask": Array [
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          " ",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
        ],
        "placeholder": "Please enter your date of birth",
      }
    }
    isValidDate={[Function]}
    onBeforeNavigate={[Function]}
    onCalendarClose={[Function]}
    onCalendarOpen={[Function]}
    onChange={[Function]}
    onClose={[Function]}
    onNavigate={[Function]}
    onNavigateBack={[Function]}
    onNavigateForward={[Function]}
    onOpen={[MockFunction]}
    renderInput={[Function]}
    strictParsing={true}
    timeConstraints={Object {}}
    timeFormat="HH:mm:ss"
    utc={true}
    value={2000-01-01T11:30:40.000Z}
  />
  Some error
</FormGroup>
`;

exports[`Component: DateTimeInput ui with label: Component: DateTimeInput => ui => with label 1`] = `
<FormGroup
  className="date-time-input"
  color="success"
  tag="div"
>
  <Label
    for="dateOfBirth"
    tag="label"
    widths={
      Array [
        "xs",
        "sm",
        "md",
        "lg",
        "xl",
      ]
    }
  >
    Date of birth
     
    <span
      className="date-time-input-format text-muted"
    >
      (
      YYYY-MM-DD HH:mm:ss
      )
    </span>
  </Label>
  <n
    className=""
    closeOnClickOutside={true}
    closeOnSelect={true}
    closeOnTab={true}
    dateFormat="YYYY-MM-DD"
    input={true}
    inputProps={
      Object {
        "autoComplete": "off",
        "id": "dateOfBirth",
        "invalid": false,
        "mask": Array [
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          " ",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
        ],
        "placeholder": "Please enter your date of birth",
      }
    }
    isValidDate={[Function]}
    onBeforeNavigate={[Function]}
    onCalendarClose={[Function]}
    onCalendarOpen={[Function]}
    onChange={[Function]}
    onClose={[Function]}
    onNavigate={[Function]}
    onNavigateBack={[Function]}
    onNavigateForward={[Function]}
    onOpen={[MockFunction]}
    renderInput={[Function]}
    strictParsing={true}
    timeConstraints={Object {}}
    timeFormat="HH:mm:ss"
    utc={true}
    value={2000-01-01T11:30:40.000Z}
  />
  Some error
</FormGroup>
`;

exports[`Component: DateTimeInput ui without label: Component: DateTimeInput => ui => without label 1`] = `
<FormGroup
  className="date-time-input"
  color="success"
  tag="div"
>
  <n
    className=""
    closeOnClickOutside={true}
    closeOnSelect={true}
    closeOnTab={true}
    dateFormat="YYYY-MM-DD"
    input={true}
    inputProps={
      Object {
        "autoComplete": "off",
        "id": "dateOfBirth",
        "invalid": false,
        "mask": Array [
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          "-",
          /\\\\d/,
          /\\\\d/,
          " ",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
          ":",
          /\\\\d/,
          /\\\\d/,
        ],
        "placeholder": "Please enter your date of birth",
      }
    }
    isValidDate={[Function]}
    onBeforeNavigate={[Function]}
    onCalendarClose={[Function]}
    onCalendarOpen={[Function]}
    onChange={[Function]}
    onClose={[Function]}
    onNavigate={[Function]}
    onNavigateBack={[Function]}
    onNavigateForward={[Function]}
    onOpen={[MockFunction]}
    renderInput={[Function]}
    strictParsing={true}
    timeConstraints={Object {}}
    timeFormat="HH:mm:ss"
    utc={true}
    value={2000-01-01T11:30:40.000Z}
  />
  Some error
</FormGroup>
`;
